<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jscO/z+w9YbnFpesKwAAAABJRU5ErkJggg==
</value>
  </data>
</root>